<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="230" onload="init(evt)" viewBox="0 0 1200 230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="230.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="213" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="213" > </text>
<g id="frames">
<g >
<title> even (20,070 samples, 0.27%)</title><rect x="987.8" y="85" width="3.3" height="15.0" fill="rgb(211,73,16)" rx="2" ry="2" />
<text  x="990.83" y="95.5" ></text>
</g>
<g >
<title> even (20,280 samples, 0.28%)</title><rect x="111.8" y="101" width="3.2" height="15.0" fill="rgb(244,213,1)" rx="2" ry="2" />
<text  x="114.77" y="111.5" ></text>
</g>
<g >
<title> exponentiate (40,304 samples, 0.55%)</title><rect x="1007.4" y="53" width="6.5" height="15.0" fill="rgb(230,142,12)" rx="2" ry="2" />
<text  x="1010.38" y="63.5" ></text>
</g>
<g >
<title> even (20,070 samples, 0.27%)</title><rect x="1013.9" y="69" width="3.3" height="15.0" fill="rgb(242,46,18)" rx="2" ry="2" />
<text  x="1016.92" y="79.5" ></text>
</g>
<g >
<title> exponentiateMod (20,090 samples, 0.27%)</title><rect x="1040.0" y="69" width="3.2" height="15.0" fill="rgb(245,184,27)" rx="2" ry="2" />
<text  x="1042.97" y="79.5" ></text>
</g>
<g >
<title> exponentiate (262,828 samples, 3.59%)</title><rect x="88.9" y="133" width="42.4" height="15.0" fill="rgb(232,76,4)" rx="2" ry="2" />
<text  x="91.87" y="143.5" > ex..</text>
</g>
<g >
<title> exponentiate (100,608 samples, 1.38%)</title><rect x="115.0" y="101" width="16.3" height="15.0" fill="rgb(251,50,25)" rx="2" ry="2" />
<text  x="118.04" y="111.5" ></text>
</g>
<g >
<title> even (20,140 samples, 0.28%)</title><rect x="1030.2" y="37" width="3.3" height="15.0" fill="rgb(230,217,17)" rx="2" ry="2" />
<text  x="1033.22" y="47.5" ></text>
</g>
<g >
<title> exponentiate (101,052 samples, 1.38%)</title><rect x="1023.7" y="53" width="16.3" height="15.0" fill="rgb(206,165,54)" rx="2" ry="2" />
<text  x="1026.67" y="63.5" ></text>
</g>
<g >
<title>all (7,314,728 samples, 100%)</title><rect x="10.0" y="181" width="1180.0" height="15.0" fill="rgb(206,113,17)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title> exponentiateMod (889,060 samples, 12.15%)</title><rect x="79.1" y="149" width="143.4" height="15.0" fill="rgb(216,228,39)" rx="2" ry="2" />
<text  x="82.08" y="159.5" > exponentiateMod</text>
</g>
<g >
<title> even (20,140 samples, 0.28%)</title><rect x="1004.1" y="53" width="3.3" height="15.0" fill="rgb(217,110,35)" rx="2" ry="2" />
<text  x="1007.13" y="63.5" ></text>
</g>
<g >
<title> exponentiate (141,578 samples, 1.94%)</title><rect x="154.0" y="101" width="22.9" height="15.0" fill="rgb(240,8,37)" rx="2" ry="2" />
<text  x="157.04" y="111.5" > ..</text>
</g>
<g >
<title> `$wchallengeScalar` (557,040 samples, 7.62%)</title><rect x="1093.5" y="85" width="89.8" height="15.0" fill="rgb(242,113,12)" rx="2" ry="2" />
<text  x="1096.47" y="95.5" > `$wchalle..</text>
</g>
<g >
<title> getTranscript (869,127 samples, 11.88%)</title><rect x="1043.2" y="117" width="140.2" height="15.0" fill="rgb(251,113,23)" rx="2" ry="2" />
<text  x="1046.22" y="127.5" > getTranscript</text>
</g>
<g >
<title> exponentiate (202,121 samples, 2.76%)</title><rect x="144.3" y="117" width="32.6" height="15.0" fill="rgb(241,20,10)" rx="2" ry="2" />
<text  x="147.27" y="127.5" > e..</text>
</g>
<g >
<title> `$wgetTranscript` (4,055,030 samples, 55.44%)</title><rect x="222.6" y="133" width="654.2" height="15.0" fill="rgb(223,71,49)" rx="2" ry="2" />
<text  x="225.64" y="143.5" > `$wgetTranscript`</text>
</g>
<g >
<title> exponentiate (101,052 samples, 1.38%)</title><rect x="968.3" y="85" width="16.3" height="15.0" fill="rgb(251,145,33)" rx="2" ry="2" />
<text  x="971.25" y="95.5" ></text>
</g>
<g >
<title> mkScalar (970,584 samples, 13.27%)</title><rect x="640.6" y="101" width="156.6" height="15.0" fill="rgb(238,52,30)" rx="2" ry="2" />
<text  x="643.65" y="111.5" > mkScalar</text>
</g>
<g >
<title> exponentiate (40,456 samples, 0.55%)</title><rect x="212.7" y="69" width="6.5" height="15.0" fill="rgb(225,125,54)" rx="2" ry="2" />
<text  x="215.72" y="79.5" ></text>
</g>
<g >
<title> even (20,140 samples, 0.28%)</title><rect x="85.6" y="133" width="3.3" height="15.0" fill="rgb(241,31,22)" rx="2" ry="2" />
<text  x="88.62" y="143.5" ></text>
</g>
<g >
<title> `$wgetTranscript` (868,935 samples, 11.88%)</title><rect x="1043.2" y="101" width="140.2" height="15.0" fill="rgb(244,29,9)" rx="2" ry="2" />
<text  x="1046.25" y="111.5" > `$wgetTranscript`</text>
</g>
<g >
<title> even (20,210 samples, 0.28%)</title><rect x="209.5" y="69" width="3.2" height="15.0" fill="rgb(239,190,19)" rx="2" ry="2" />
<text  x="212.46" y="79.5" ></text>
</g>
<g >
<title> exponentiate (222,104 samples, 3.04%)</title><rect x="95.4" y="117" width="35.9" height="15.0" fill="rgb(226,213,46)" rx="2" ry="2" />
<text  x="98.44" y="127.5" > ex..</text>
</g>
<g >
<title> mkScalar (242,268 samples, 3.31%)</title><rect x="1131.0" y="69" width="39.1" height="15.0" fill="rgb(240,130,1)" rx="2" ry="2" />
<text  x="1133.97" y="79.5" > mk..</text>
</g>
<g >
<title> exponentiate (40,304 samples, 0.55%)</title><rect x="1033.5" y="37" width="6.5" height="15.0" fill="rgb(245,227,28)" rx="2" ry="2" />
<text  x="1036.47" y="47.5" ></text>
</g>
<g >
<title> exponentiateMod (565,508 samples, 7.73%)</title><rect x="131.3" y="133" width="91.2" height="15.0" fill="rgb(214,175,40)" rx="2" ry="2" />
<text  x="134.27" y="143.5" > exponenti..</text>
</g>
<g >
<title> exponentiate (40,304 samples, 0.55%)</title><rect x="978.1" y="69" width="6.5" height="15.0" fill="rgb(226,138,7)" rx="2" ry="2" />
<text  x="981.05" y="79.5" ></text>
</g>
<g >
<title> mkScalar (323,708 samples, 4.43%)</title><rect x="886.6" y="149" width="52.2" height="15.0" fill="rgb(212,89,19)" rx="2" ry="2" />
<text  x="889.58" y="159.5" > mkSc..</text>
</g>
<g >
<title> exponentiate (141,578 samples, 1.94%)</title><rect x="196.4" y="85" width="22.8" height="15.0" fill="rgb(233,113,30)" rx="2" ry="2" />
<text  x="199.41" y="95.5" > ..</text>
</g>
<g >
<title> exponentiateMod (363,642 samples, 4.97%)</title><rect x="984.6" y="101" width="58.6" height="15.0" fill="rgb(246,125,23)" rx="2" ry="2" />
<text  x="987.55" y="111.5" > expon..</text>
</g>
<g >
<title> exponentiateMod (181,866 samples, 2.49%)</title><rect x="1013.9" y="85" width="29.3" height="15.0" fill="rgb(220,16,41)" rx="2" ry="2" />
<text  x="1016.88" y="95.5" > e..</text>
</g>
<g >
<title> zipWith (1,557,145 samples, 21.29%)</title><rect x="938.8" y="149" width="251.2" height="15.0" fill="rgb(211,104,30)" rx="2" ry="2" />
<text  x="941.80" y="159.5" > zipWith</text>
</g>
<g >
<title> exponentiateMod (545,418 samples, 7.46%)</title><rect x="955.2" y="117" width="88.0" height="15.0" fill="rgb(245,204,32)" rx="2" ry="2" />
<text  x="958.23" y="127.5" > exponenti..</text>
</g>
<g >
<title> exponentiateMod (282,799 samples, 3.87%)</title><rect x="176.9" y="117" width="45.6" height="15.0" fill="rgb(229,186,28)" rx="2" ry="2" />
<text  x="179.88" y="127.5" > exp..</text>
</g>
<g >
<title>verifyPlonkFast (7,314,728 samples, 100.00%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(206,186,39)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >verifyPlonkFast</text>
</g>
<g >
<title> go (60,691 samples, 0.83%)</title><rect x="876.8" y="149" width="9.8" height="15.0" fill="rgb(240,15,30)" rx="2" ry="2" />
<text  x="879.79" y="159.5" ></text>
</g>
<g >
<title> even (20,105 samples, 0.27%)</title><rect x="193.2" y="85" width="3.2" height="15.0" fill="rgb(247,21,2)" rx="2" ry="2" />
<text  x="196.17" y="95.5" ></text>
</g>
<g >
<title> exponentiate (40,456 samples, 0.55%)</title><rect x="170.4" y="85" width="6.5" height="15.0" fill="rgb(227,210,3)" rx="2" ry="2" />
<text  x="173.35" y="95.5" ></text>
</g>
<g >
<title> takeByteString (470,584 samples, 6.43%)</title><rect x="797.2" y="101" width="75.9" height="15.0" fill="rgb(233,19,17)" rx="2" ry="2" />
<text  x="800.22" y="111.5" > takeByt..</text>
</g>
<g >
<title> takeByteString (82,268 samples, 1.12%)</title><rect x="1170.1" y="69" width="13.2" height="15.0" fill="rgb(252,60,4)" rx="2" ry="2" />
<text  x="1173.06" y="79.5" ></text>
</g>
<g >
<title> getTranscript (4,055,926 samples, 55.45%)</title><rect x="222.5" y="149" width="654.3" height="15.0" fill="rgb(247,28,3)" rx="2" ry="2" />
<text  x="225.50" y="159.5" > getTranscript</text>
</g>
<g >
<title> exponentiate (141,414 samples, 1.93%)</title><rect x="991.1" y="85" width="22.8" height="15.0" fill="rgb(247,196,36)" rx="2" ry="2" />
<text  x="994.06" y="95.5" > ..</text>
</g>
<g >
<title> go (1,556,889 samples, 21.28%)</title><rect x="938.8" y="133" width="251.2" height="15.0" fill="rgb(247,110,14)" rx="2" ry="2" />
<text  x="941.85" y="143.5" > go</text>
</g>
<g >
<title> `$wchallengeScalar` (2,559,520 samples, 34.99%)</title><rect x="460.2" y="117" width="412.9" height="15.0" fill="rgb(254,145,17)" rx="2" ry="2" />
<text  x="463.24" y="127.5" > `$wchallengeScalar`</text>
</g>
<g >
<title> exponentiate (202,121 samples, 2.76%)</title><rect x="186.6" y="101" width="32.6" height="15.0" fill="rgb(251,92,21)" rx="2" ry="2" />
<text  x="189.64" y="111.5" > e..</text>
</g>
<g >
<title> transcriptNew (22,688 samples, 0.31%)</title><rect x="873.1" y="117" width="3.7" height="15.0" fill="rgb(231,3,27)" rx="2" ry="2" />
<text  x="876.13" y="127.5" ></text>
</g>
<g >
<title> exponentiate (101,052 samples, 1.38%)</title><rect x="997.6" y="69" width="16.3" height="15.0" fill="rgb(247,55,14)" rx="2" ry="2" />
<text  x="1000.58" y="79.5" ></text>
</g>
<g >
<title> mkScalar (40,684 samples, 0.56%)</title><rect x="1183.4" y="117" width="6.6" height="15.0" fill="rgb(216,159,4)" rx="2" ry="2" />
<text  x="1186.44" y="127.5" ></text>
</g>
<g >
<title> exponentiate (141,414 samples, 1.93%)</title><rect x="1017.2" y="69" width="22.8" height="15.0" fill="rgb(212,198,54)" rx="2" ry="2" />
<text  x="1020.16" y="79.5" > ..</text>
</g>
<g >
<title> exponentiate (141,414 samples, 1.93%)</title><rect x="961.7" y="101" width="22.9" height="15.0" fill="rgb(231,95,27)" rx="2" ry="2" />
<text  x="964.74" y="111.5" > ..</text>
</g>
<g >
<title> exponentiateMod (20,135 samples, 0.28%)</title><rect x="219.2" y="101" width="3.3" height="15.0" fill="rgb(208,177,45)" rx="2" ry="2" />
<text  x="222.25" y="111.5" ></text>
</g>
</g>
</svg>
