<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="230" onload="init(evt)" viewBox="0 0 1200 230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="230.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="213" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="213" > </text>
<g id="frames">
<g >
<title> exponentiate (67,078,462 samples, 0.63%)</title><rect x="1100.9" y="69" width="7.4" height="15.0" fill="rgb(234,105,46)" rx="2" ry="2" />
<text  x="1103.90" y="79.5" ></text>
</g>
<g >
<title> exponentiate (98,317,693 samples, 0.92%)</title><rect x="632.2" y="101" width="10.8" height="15.0" fill="rgb(235,55,38)" rx="2" ry="2" />
<text  x="635.21" y="111.5" ></text>
</g>
<g >
<title> zipWith (1,476,778,093 samples, 13.78%)</title><rect x="1027.5" y="149" width="162.5" height="15.0" fill="rgb(250,54,11)" rx="2" ry="2" />
<text  x="1030.45" y="159.5" > zipWith</text>
</g>
<g >
<title> even (3,821,164 samples, 0.04%)</title><rect x="602.4" y="117" width="0.5" height="15.0" fill="rgb(226,128,11)" rx="2" ry="2" />
<text  x="605.44" y="127.5" ></text>
</g>
<g >
<title> even (8,421,164 samples, 0.08%)</title><rect x="1105.4" y="37" width="0.9" height="15.0" fill="rgb(243,189,51)" rx="2" ry="2" />
<text  x="1108.39" y="47.5" ></text>
</g>
<g >
<title> exponentiateMod (272,546,308 samples, 2.54%)</title><rect x="614.3" y="133" width="30.0" height="15.0" fill="rgb(208,0,18)" rx="2" ry="2" />
<text  x="617.33" y="143.5" > e..</text>
</g>
<g >
<title> exponentiateMod (177,025,900 samples, 1.65%)</title><rect x="1089.8" y="101" width="19.5" height="15.0" fill="rgb(216,160,15)" rx="2" ry="2" />
<text  x="1092.83" y="111.5" ></text>
</g>
<g >
<title> exponentiateMod (138,680,612 samples, 1.29%)</title><rect x="629.1" y="117" width="15.2" height="15.0" fill="rgb(205,122,13)" rx="2" ry="2" />
<text  x="632.07" y="127.5" ></text>
</g>
<g >
<title> mkScalar (154,948,473 samples, 1.45%)</title><rect x="1010.4" y="149" width="17.1" height="15.0" fill="rgb(214,198,14)" rx="2" ry="2" />
<text  x="1013.40" y="159.5" ></text>
</g>
<g >
<title> getTranscript (3,304,899,934 samples, 30.83%)</title><rect x="644.3" y="149" width="363.8" height="15.0" fill="rgb(213,82,2)" rx="2" ry="2" />
<text  x="647.33" y="159.5" > getTranscript</text>
</g>
<g >
<title> even (7,465,873 samples, 0.07%)</title><rect x="634.2" y="85" width="0.9" height="15.0" fill="rgb(223,200,53)" rx="2" ry="2" />
<text  x="637.24" y="95.5" ></text>
</g>
<g >
<title> `$wchallengeScalar` (292,176,270 samples, 2.73%)</title><rect x="1154.7" y="85" width="32.1" height="15.0" fill="rgb(247,228,21)" rx="2" ry="2" />
<text  x="1157.69" y="95.5" > `..</text>
</g>
<g >
<title> even (2,865,873 samples, 0.03%)</title><rect x="620.8" y="101" width="0.3" height="15.0" fill="rgb(214,119,31)" rx="2" ry="2" />
<text  x="623.78" y="111.5" ></text>
</g>
<g >
<title> `$wgetTranscript` (706,918,791 samples, 6.59%)</title><rect x="1109.5" y="101" width="77.8" height="15.0" fill="rgb(225,27,20)" rx="2" ry="2" />
<text  x="1112.46" y="111.5" > `$wgetT..</text>
</g>
<g >
<title> transcriptNew (22,436,728 samples, 0.21%)</title><rect x="1005.6" y="117" width="2.5" height="15.0" fill="rgb(242,80,9)" rx="2" ry="2" />
<text  x="1008.62" y="127.5" ></text>
</g>
<g >
<title> exponentiate (72,417,190 samples, 0.68%)</title><rect x="635.1" y="85" width="7.9" height="15.0" fill="rgb(250,28,48)" rx="2" ry="2" />
<text  x="638.06" y="95.5" ></text>
</g>
<g >
<title> exponentiate (17,854,056 samples, 0.17%)</title><rect x="1097.3" y="53" width="2.0" height="15.0" fill="rgb(221,77,36)" rx="2" ry="2" />
<text  x="1100.34" y="63.5" ></text>
</g>
<g >
<title> `$wgetTranscript` (3,298,954,358 samples, 30.77%)</title><rect x="645.0" y="133" width="363.1" height="15.0" fill="rgb(246,62,5)" rx="2" ry="2" />
<text  x="647.98" y="143.5" > `$wgetTranscript`</text>
</g>
<g >
<title> mkScalar (24,204,496 samples, 0.23%)</title><rect x="1187.3" y="117" width="2.7" height="15.0" fill="rgb(247,43,14)" rx="2" ry="2" />
<text  x="1190.34" y="127.5" ></text>
</g>
<g >
<title> exponentiate (17,854,056 samples, 0.17%)</title><rect x="1087.9" y="69" width="1.9" height="15.0" fill="rgb(239,81,39)" rx="2" ry="2" />
<text  x="1090.87" y="79.5" ></text>
</g>
<g >
<title> even (5,731,746 samples, 0.05%)</title><rect x="626.0" y="85" width="0.6" height="15.0" fill="rgb(223,107,17)" rx="2" ry="2" />
<text  x="628.99" y="95.5" ></text>
</g>
<g >
<title> exponentiate (98,317,693 samples, 0.92%)</title><rect x="618.2" y="117" width="10.9" height="15.0" fill="rgb(212,191,22)" rx="2" ry="2" />
<text  x="621.24" y="127.5" ></text>
</g>
<g >
<title> takeByteString (246,232,040 samples, 2.30%)</title><rect x="978.5" y="101" width="27.1" height="15.0" fill="rgb(248,78,35)" rx="2" ry="2" />
<text  x="981.52" y="111.5" > ..</text>
</g>
<g >
<title> exponentiateMod (9,414,916 samples, 0.09%)</title><rect x="1108.3" y="69" width="1.0" height="15.0" fill="rgb(237,189,33)" rx="2" ry="2" />
<text  x="1111.28" y="79.5" ></text>
</g>
<g >
<title> mkScalar (3,157,631 samples, 0.03%)</title><rect x="1010.1" y="133" width="0.3" height="15.0" fill="rgb(206,167,25)" rx="2" ry="2" />
<text  x="1013.05" y="143.5" ></text>
</g>
<g >
<title> even (6,510,582 samples, 0.06%)</title><rect x="1091.2" y="85" width="0.7" height="15.0" fill="rgb(215,114,28)" rx="2" ry="2" />
<text  x="1094.21" y="95.5" ></text>
</g>
<g >
<title> even (1,910,582 samples, 0.02%)</title><rect x="1084.1" y="85" width="0.2" height="15.0" fill="rgb(233,145,33)" rx="2" ry="2" />
<text  x="1087.14" y="95.5" ></text>
</g>
<g >
<title> exponentiate (40,308,112 samples, 0.38%)</title><rect x="609.9" y="101" width="4.4" height="15.0" fill="rgb(252,19,47)" rx="2" ry="2" />
<text  x="612.90" y="111.5" ></text>
</g>
<g >
<title> exponentiateMod (90,920,408 samples, 0.85%)</title><rect x="1099.3" y="85" width="10.0" height="15.0" fill="rgb(228,153,51)" rx="2" ry="2" />
<text  x="1102.31" y="95.5" ></text>
</g>
<g >
<title> even (10,331,746 samples, 0.10%)</title><rect x="639.5" y="69" width="1.1" height="15.0" fill="rgb(230,144,54)" rx="2" ry="2" />
<text  x="642.45" y="79.5" ></text>
</g>
<g >
<title> even (2,865,873 samples, 0.03%)</title><rect x="617.9" y="117" width="0.3" height="15.0" fill="rgb(225,194,3)" rx="2" ry="2" />
<text  x="620.93" y="127.5" ></text>
</g>
<g >
<title> getTranscript (708,192,843 samples, 6.61%)</title><rect x="1109.3" y="117" width="78.0" height="15.0" fill="rgb(212,40,20)" rx="2" ry="2" />
<text  x="1112.32" y="127.5" > getTrans..</text>
</g>
<g >
<title> go (20,970,422 samples, 0.20%)</title><rect x="1008.1" y="149" width="2.3" height="15.0" fill="rgb(217,15,9)" rx="2" ry="2" />
<text  x="1011.09" y="159.5" ></text>
</g>
<g >
<title> even (6,510,582 samples, 0.06%)</title><rect x="1100.2" y="69" width="0.7" height="15.0" fill="rgb(211,0,9)" rx="2" ry="2" />
<text  x="1103.18" y="79.5" ></text>
</g>
<g >
<title> `$wchallengeScalar` (1,354,289,260 samples, 12.63%)</title><rect x="856.6" y="117" width="149.0" height="15.0" fill="rgb(230,14,30)" rx="2" ry="2" />
<text  x="859.56" y="127.5" > `$wchallengeScalar`</text>
</g>
<g >
<title>verifyPlonkFast (10,720,704,745 samples, 100.00%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(227,127,17)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >verifyPlonkFast</text>
</g>
<g >
<title> exponentiate (17,854,056 samples, 0.17%)</title><rect x="1106.3" y="37" width="2.0" height="15.0" fill="rgb(216,21,24)" rx="2" ry="2" />
<text  x="1109.32" y="47.5" ></text>
</g>
<g >
<title> exponentiate (104,222,920 samples, 0.97%)</title><rect x="602.9" y="117" width="11.4" height="15.0" fill="rgb(241,15,47)" rx="2" ry="2" />
<text  x="605.86" y="127.5" ></text>
</g>
<g >
<title> even (1,910,582 samples, 0.02%)</title><rect x="1093.6" y="69" width="0.2" height="15.0" fill="rgb(239,128,5)" rx="2" ry="2" />
<text  x="1096.62" y="79.5" ></text>
</g>
<g >
<title> mkScalar (452,998,554 samples, 4.23%)</title><rect x="928.7" y="101" width="49.8" height="15.0" fill="rgb(205,101,5)" rx="2" ry="2" />
<text  x="931.66" y="111.5" > mkSc..</text>
</g>
<g >
<title> even (1,910,582 samples, 0.02%)</title><rect x="1082.2" y="101" width="0.2" height="15.0" fill="rgb(242,12,28)" rx="2" ry="2" />
<text  x="1085.24" y="111.5" ></text>
</g>
<g >
<title> exponentiate (22,181,084 samples, 0.21%)</title><rect x="626.6" y="85" width="2.5" height="15.0" fill="rgb(206,94,43)" rx="2" ry="2" />
<text  x="629.62" y="95.5" ></text>
</g>
<g >
<title> even (8,421,164 samples, 0.08%)</title><rect x="599.1" y="133" width="1.0" height="15.0" fill="rgb(247,164,50)" rx="2" ry="2" />
<text  x="602.14" y="143.5" ></text>
</g>
<g >
<title> mkScalar (104,956,833 samples, 0.98%)</title><rect x="1170.0" y="69" width="11.5" height="15.0" fill="rgb(225,146,12)" rx="2" ry="2" />
<text  x="1172.96" y="79.5" ></text>
</g>
<g >
<title> even (8,421,164 samples, 0.08%)</title><rect x="1096.4" y="53" width="0.9" height="15.0" fill="rgb(244,156,19)" rx="2" ry="2" />
<text  x="1099.42" y="63.5" ></text>
</g>
<g >
<title> even (12,242,328 samples, 0.11%)</title><rect x="608.5" y="101" width="1.4" height="15.0" fill="rgb(254,110,12)" rx="2" ry="2" />
<text  x="611.55" y="111.5" ></text>
</g>
<g >
<title> transcriptNew (3,822,156 samples, 0.04%)</title><rect x="1186.8" y="85" width="0.5" height="15.0" fill="rgb(225,43,10)" rx="2" ry="2" />
<text  x="1189.85" y="95.5" ></text>
</g>
<g >
<title> exponentiate (22,181,084 samples, 0.21%)</title><rect x="640.6" y="69" width="2.4" height="15.0" fill="rgb(219,90,2)" rx="2" ry="2" />
<text  x="643.59" y="79.5" ></text>
</g>
<g >
<title> exponentiateMod (11,822,374 samples, 0.11%)</title><rect x="643.0" y="101" width="1.3" height="15.0" fill="rgb(249,9,28)" rx="2" ry="2" />
<text  x="646.03" y="111.5" ></text>
</g>
<g >
<title> exponentiate (67,078,462 samples, 0.63%)</title><rect x="1091.9" y="85" width="7.4" height="15.0" fill="rgb(220,109,30)" rx="2" ry="2" />
<text  x="1094.93" y="95.5" ></text>
</g>
<g >
<title> exponentiateMod (435,557,292 samples, 4.06%)</title><rect x="596.4" y="149" width="47.9" height="15.0" fill="rgb(212,156,31)" rx="2" ry="2" />
<text  x="599.39" y="159.5" > exp..</text>
</g>
<g >
<title> exponentiate (129,556,924 samples, 1.21%)</title><rect x="600.1" y="133" width="14.2" height="15.0" fill="rgb(224,31,54)" rx="2" ry="2" />
<text  x="603.07" y="143.5" ></text>
</g>
<g >
<title> even (1,910,582 samples, 0.02%)</title><rect x="1102.6" y="53" width="0.2" height="15.0" fill="rgb(249,73,28)" rx="2" ry="2" />
<text  x="1105.59" y="63.5" ></text>
</g>
<g >
<title> exponentiate (67,078,462 samples, 0.63%)</title><rect x="1082.4" y="101" width="7.4" height="15.0" fill="rgb(250,14,9)" rx="2" ry="2" />
<text  x="1085.45" y="111.5" ></text>
</g>
<g >
<title>all (10,720,704,745 samples, 100%)</title><rect x="10.0" y="181" width="1180.0" height="15.0" fill="rgb(239,73,22)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title> takeByteString (48,492,580 samples, 0.45%)</title><rect x="1181.5" y="69" width="5.3" height="15.0" fill="rgb(247,160,18)" rx="2" ry="2" />
<text  x="1184.51" y="79.5" ></text>
</g>
<g >
<title> even (2,865,873 samples, 0.03%)</title><rect x="631.9" y="101" width="0.3" height="15.0" fill="rgb(237,1,37)" rx="2" ry="2" />
<text  x="634.89" y="111.5" ></text>
</g>
<g >
<title> even (3,821,164 samples, 0.04%)</title><rect x="1087.4" y="69" width="0.5" height="15.0" fill="rgb(247,129,10)" rx="2" ry="2" />
<text  x="1090.45" y="79.5" ></text>
</g>
<g >
<title> exponentiate (49,811,460 samples, 0.46%)</title><rect x="1084.3" y="85" width="5.5" height="15.0" fill="rgb(227,17,44)" rx="2" ry="2" />
<text  x="1087.35" y="95.5" ></text>
</g>
<g >
<title> exponentiate (72,417,190 samples, 0.68%)</title><rect x="621.1" y="101" width="8.0" height="15.0" fill="rgb(224,115,7)" rx="2" ry="2" />
<text  x="624.10" y="111.5" ></text>
</g>
<g >
<title> exponentiateMod (263,131,392 samples, 2.45%)</title><rect x="1080.4" y="117" width="28.9" height="15.0" fill="rgb(250,113,8)" rx="2" ry="2" />
<text  x="1083.35" y="127.5" > e..</text>
</g>
<g >
<title> go (1,475,079,357 samples, 13.76%)</title><rect x="1027.6" y="133" width="162.4" height="15.0" fill="rgb(215,192,41)" rx="2" ry="2" />
<text  x="1030.64" y="143.5" > go</text>
</g>
<g >
<title> exponentiate (49,811,460 samples, 0.46%)</title><rect x="1093.8" y="69" width="5.5" height="15.0" fill="rgb(220,79,34)" rx="2" ry="2" />
<text  x="1096.83" y="79.5" ></text>
</g>
<g >
<title> exponentiate (49,811,460 samples, 0.46%)</title><rect x="1102.8" y="53" width="5.5" height="15.0" fill="rgb(218,211,42)" rx="2" ry="2" />
<text  x="1105.80" y="63.5" ></text>
</g>
</g>
</svg>
